# This is a basic workflow to help you get started with Actions

name: CI/CD to FTP

env:
  WAR_FILE_NAME   : "demo-0.0.1-SNAPSHOT.war"
  WAR_PATH_NAME   : "sample" 
  TOMCAT_ADDRESS  : "http://134.249.137.154:8082/"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Set up JDK 15
      uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 15.0.2

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      
        
    - name: Build and test project with Maven
      run: mvn clean install | mvn compile | mvn -B package --file pom.xml -DskipTests -X
      
   # - name: War Build  
   #   run: mvn --batch-mode --update-snapshots verify
    - name: Create staging Dir place the *.war file inside it (from target dir)
      run: mkdir -p staging && cp target/*.war staging

    - name: Commit new files to repository
      run: |
        git config --global user.name ${{ secrets.MY_GITHUB_USERNAME }}
        git config --global user.email ${{ secrets.MY_GITHUB_EMAIL }}

        git add -A && git commit -m "Adding staging directory" && git push

    - name: upload artifact staging dir with war via ftp
      uses: actions/upload-artifact@v2
      with:
       name: Package
       path: staging         
    
      
    - name: FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@3.0.0
      with:
        # Deployment destination server & path. Formatted as protocol://domain.com:port/full/destination/path/
        ftp-server: ${{ secrets.FTP_HOST }}
        # FTP account username
        ftp-username: ${{ secrets.FTP_USERNAME }}
        # FTP account password
        ftp-password: ${{ secrets.FTP_PASSWORD }}
  
  cd_part:
    runs-on: ubuntu-latest
    needs: [ci_part]
     
    steps:
    
    - name: print deploy request 
      run: |
        echo ${{ secrets.TOMCAT_USERNAME }}:${{ secrets.TOMCAT_PASSWORD }}\
        "${{ env.TOMCAT_ADDRESS }}manager/text/deploy?path=/${{ env.WAR_PATH_NAME }}&\
        war=file:/staging/${{ env.WAR_FILE_NAME }}"    
    
    - name: Undeploy war file
      run: |
        curl -u ${{ secrets.TOMCAT_USERNAME }}:${{ secrets.TOMCAT_PASSWORD }}\
        "${{ env.TOMCAT_ADDRESS }}manager/text/undeploy?path=/${{ env.WAR_PATH_NAME }}"    
    
    - name: Deploy on Tomcat server war file
      run: |
        curl -u ${{ secrets.TOMCAT_USERNAME }}:${{ secrets.TOMCAT_PASSWORD }}\
        "${{ env.TOMCAT_ADDRESS }}manager/text/deploy?path=/${{ env.WAR_PATH_NAME }}&\
        war=file:/staging/${{ env.WAR_FILE_NAME }}"    
